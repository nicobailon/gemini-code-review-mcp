name: Essential Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock pytest-asyncio build
        pip install -e .
    
    - name: Run critical tests only
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        GEMINI_MODEL: gemini-2.0-flash-lite  # Cheapest model
      run: |
        # Test core functionality that actually exists
        pytest tests/test_critical.py -v --tb=short
    
    - name: Test package building
      run: |
        python -m build
        
    - name: Test entry points
      run: |
        python -c "
        try:
            from importlib.metadata import entry_points
            eps = entry_points()
            console_scripts = eps.get('console_scripts', [])
            our_eps = [ep for ep in console_scripts if 'task-list' in ep.name or 'generate-code' in ep.name or 'review-with' in ep.name]
            print(f'✅ Found {len(our_eps)} entry points: {[ep.name for ep in our_eps]}')
            assert len(our_eps) >= 3, f'Expected at least 3 entry points, found {len(our_eps)}'
        except ImportError:
            # Fallback for older Python
            import pkg_resources
            eps = list(pkg_resources.iter_entry_points('console_scripts'))
            our_eps = [ep for ep in eps if 'task-list' in ep.name or 'generate-code' in ep.name or 'review-with' in ep.name]
            print(f'✅ Found {len(our_eps)} entry points: {[ep.name for ep in our_eps]}')
            assert len(our_eps) >= 3, f'Expected at least 3 entry points, found {len(our_eps)}'
        "