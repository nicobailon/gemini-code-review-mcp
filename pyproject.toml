[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = [
  "test-env",
  "examples",
  "rules",
  ".env*",
  "review-context-*.md",
  "code-review-context-*.md",
  "code-review-comprehensive-feedback-*.md",
  "meta-prompt-*.md"
]

[tool.hatch.build.targets.wheel]
packages = ["src"]
exclude = [
  "test-env",
  "examples", 
  "rules",
  ".env*",
  "review-context-*.md",
  "code-review-context-*.md",
  "code-review-comprehensive-feedback-*.md",
  "meta-prompt-*.md"
]

[project]
name = "task-list-code-review-mcp"
version = "0.3.9"
description = "MCP server and CLI tools for AI-powered code reviews with meta-prompt generation"
authors = [
    {name = "Nico Bailon", email = "nico604@pm.me"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastmcp>=0.1.0",
    "google-genai>=0.1.0",
    "python-dotenv>=1.0.0",
    "requests>=2.25.0",
]

[project.urls]
Homepage = "https://github.com/nicobailon/task-list-code-review-mcp"
Repository = "https://github.com/nicobailon/task-list-code-review-mcp"
Issues = "https://github.com/nicobailon/task-list-code-review-mcp/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.0.0",
    "pytest-asyncio>=0.21.0",
    "black",
    "isort",
    "flake8",
]
yaml = [
    "PyYAML>=6.0.0",
]

[project.scripts]
# MCP Server
task-list-code-review-mcp = "src.server:main"
# CLI Tools
generate-code-review = "src.generate_code_review_context:main"
generate-meta-prompt = "src.meta_prompt_generator:main"
# Semantic shortcuts (when installed)
code-review = "src.generate_code_review_context:main"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_default_fixture_loop_scope = "function"